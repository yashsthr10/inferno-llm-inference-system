apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consumer
  template:
    metadata:
      labels:
        app: consumer
    spec:
      initContainers:
      - name: wait-for-dependencies
        image: busybox:1.36
        command: ['sh', '-c', 'until nc -z -w 2 db 5432 && nc -z -w 2 kafka 9092 && nc -z -w 2 redis 6379; do echo "Waiting for dependencies..."; sleep 2; done;']
      containers:
      - name: consumer
        # IMPORTANT: Replace with your actual image from Docker Hub
        image: yashsthr/consumer:latest
        # The command now constructs the DATABASE_URL before running uvicorn
        command: ["/bin/sh", "-c"]
        args:
          - >
            export DATABASE_URL="postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/chatlogs";
            uvicorn main:app --host 0.0.0.0 --port 8020
        ports:
        - containerPort: 8020
        env:
        # Pull the DB credentials securely from the secret
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        # The rest of your environment variables are perfect
        - name: REDIS_HOST
          value: "redis"
        - name: REDIS_PORT
          value: "6379"
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka:9092"
        - name: KAFKA_TOPIC
          value: "inferno-queue"
        - name: KAFKA_RESPONSE_TOPIC
          value: "inferno-response-queue"
        - name: JAEGER_ENDPOINT
          value: "jaeger:14250"
---
apiVersion: v1
kind: Service
metadata:
  name: consumer
spec:
  type: ClusterIP
  selector:
    app: consumer
  ports:
  - port: 8020
    targetPort: 8020

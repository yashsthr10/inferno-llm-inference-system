apiVersion: apps/v1
kind: Deployment
metadata: { name: zookeeper }
spec:
  replicas: 1
  selector: { matchLabels: { app: zookeeper } }
  template:
    metadata: { labels: { app: zookeeper } }
    spec:
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:7.5.3
        ports: [{ containerPort: 2181 }]
        env:
        - { name: ZOOKEEPER_CLIENT_PORT, value: "2181" }
        - { name: ZOOKEEPER_TICK_TIME, value: "2000" }
---
apiVersion: v1
kind: Service
metadata: { name: zookeeper }
spec:
  type: ClusterIP
  selector: { app: zookeeper }
  ports: [{ port: 2181, targetPort: 2181 }]
---
apiVersion: apps/v1
kind: Deployment
metadata: { name: kafka }
spec:
  replicas: 1
  selector: { matchLabels: { app: kafka } }
  template:
    metadata: { labels: { app: kafka } }
    spec:
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.5.3
        ports: [{ containerPort: 9092 }]
        env:
        - { name: KAFKA_BROKER_ID, value: "1" }
        - { name: KAFKA_ZOOKEEPER_CONNECT, value: "zookeeper:2181" }
        - { name: KAFKA_LISTENERS, value: "PLAINTEXT://0.0.0.0:9092" } # <-- Add this line
        - { name: KAFKA_ADVERTISED_LISTENERS, value: "PLAINTEXT://kafka:9092" }
        - { name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR, value: "1" }
        - { name: KAFKA_AUTO_CREATE_TOPICS_ENABLE, value: "true" }
        readinessProbe:
          tcpSocket: { port: 9092 }
          initialDelaySeconds: 20
          periodSeconds: 10
      initContainers:
      - name: wait-for-zookeeper
        image: docker.io/library/busybox:1.36.1
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -z zookeeper 2181; do echo waiting for zookeeper; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata: { name: kafka }
spec:
  type: ClusterIP
  selector: { app: kafka }
  ports: [{ port: 9092, targetPort: 9092 }]
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  selector: { matchLabels: { app: db } }
  template:
    metadata: { labels: { app: db } }
    spec:
      containers:
      - name: postgres
        image: postgres:15
        ports: [{ containerPort: 5432 }]
        env:
        - { name: POSTGRES_DB, value: "chatlogs" }
        - { name: POSTGRES_USER, valueFrom: { secretKeyRef: { name: db-credentials, key: username } } }
        - { name: POSTGRES_PASSWORD, valueFrom: { secretKeyRef: { name: db-credentials, key: password } } }
        volumeMounts:
        - { name: postgres-storage, mountPath: /var/lib/postgresql/data }
        - { name: init-script, mountPath: /docker-entrypoint-initdb.d }
        readinessProbe:
          exec: { command: ["pg_isready", "-U", "yash"] }
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - { name: postgres-storage, persistentVolumeClaim: { claimName: postgres-data-pvc } }
      - { name: init-script, configMap: { name: postgres-init-config } }
---
apiVersion: v1
kind: Service
metadata: { name: db }
spec:
  type: ClusterIP
  selector: { app: db }
  ports: [{ port: 5432, targetPort: 5432 }]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
spec:
  replicas: 1
  selector: { matchLabels: { app: pgadmin } }
  template:
    metadata: { labels: { app: pgadmin } }
    spec:
      containers:
      - name: pgadmin
        image: dpage/pgadmin4
        ports: [{ containerPort: 80 }]
        env:
        - { name: PGADMIN_DEFAULT_EMAIL, value: "admin@chatgpt.ai" }
        - { name: PGADMIN_DEFAULT_PASSWORD, valueFrom: { secretKeyRef: { name: app-secrets, key: PGADMIN_PASSWORD } } }
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin
spec:
  type: ClusterIP # Internal, access via Nginx if needed or port-forward for dev
  selector: { app: pgadmin }
  ports: [{ port: 5050, targetPort: 80 }]
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: wait-for-db
        image: busybox:1.36
        command: ['sh', '-c', 'until nc -z -w 2 db 5432; do echo "Waiting for DB..."; sleep 2; done;']
      containers:
      - name: backend
        # IMPORTANT: Replace with your actual image from Docker Hub
        image: yashsthr/backend:latest
        # The command now references environment variables that will be created below
        command: ["/bin/sh", "-c"]
        args:
          - >
            DATABASE_URL="postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/users"
            uvicorn main:app --host 0.0.0.0 --port 8080
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m" # 25% of a CPU core
          limits:
            memory: "512Mi"
            cpu: "500m" # 50% of a CPU core
        readinessProbe:
          httpGet:
            path: /health # Assuming you have a /health endpoint
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 20
        env:
        # Pull the DB credentials from the secret
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        # Pull the app's secret key from the other secret
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: SECRET_KEY
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
  - port: 8080
    targetPort: 8080

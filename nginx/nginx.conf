# nginx.conf

events {
    worker_connections 1024;
}

http {
    # Upstream groups for each backend service.
    # Service names match your docker-compose.yml.
    upstream frontend_service {
        server react:80;
    }
    upstream consumer_api_service {
        server consumer:8020;
    }
    upstream auth_api_service {
        server backend:8080;
    }
    upstream grafana_service {
        server grafana:3000;
    }
    upstream prometheus_service {
        server prometheus:9090;
    }
    upstream jaeger_service {
        server jaeger:16686;
    }

    server {
        listen 80;

        # --- CORRECTED & SIMPLIFIED API ROUTING ---

        # Route for the consumer service (WebSocket chat)
        # Requests to /api/consumer/... go to the 'consumer' service.
        location /api/consumer/ {
            # The trailing slash on proxy_pass strips the '/api/consumer/' prefix.
            proxy_pass http://consumer_api_service/;

            # Required headers for WebSocket connections
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route for the auth/backend service (Login, Tokens, Feedback)
        # Requests to /api/backend/... go to the 'backend' service.
        location /api/backend/ {
            # The trailing slash on proxy_pass strips the '/api/backend/' prefix.
            proxy_pass http://auth_api_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # --- SIMPLIFIED MONITORING TOOLS ROUTING ---

        location /grafana/ {
            proxy_pass http://grafana_service/;
        }
        location /prometheus/ {
            proxy_pass http://prometheus_service/;
        }
        location /jaeger/ {
            proxy_pass http://jaeger_service/;
        }

        # --- FRONTEND ROUTING (DEFAULT CATCH-ALL) ---
        location / {
            proxy_pass http://frontend_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}